// // Import the createSlice function from Redux Toolkit
// import { createSlice } from "@reduxjs/toolkit"

// // Define the initial state for the slice
// const initialState = {
//     // Set the initial user state from localStorage if available, otherwise null
//     user: localStorage.getItem("userInfo")
//         ? JSON.parse(localStorage.getItem("userInfo"))
//         : null,

//     // Set the initial state for the sidebar as closed
//     isSidebarOpen: false,
// }

// // Create the auth slice using createSlice
// const authSlice = createSlice({
//     // Name the slice
//     name: "auth",
//     // Set the initial state
//     initialState,
//     // Define the reducers
//     reducers: {
//         // Reducer to set user credentials
//         setCredentials: (state, action) => {
//             // Update the user state with the payload
//             state.user = action.payload
//             // Save the user information to localStorage
//             localStorage.setItem("userInfo", JSON.stringify(action.payload))
//         },
//         // Reducer to handle user logout
//         logout: (state, action) => {
//             // Clear the user state
//             state.user = null
//             // Remove the user information from localStorage
//             localStorage.removeItem("userInfo")
//         },
//         // Reducer to set the sidebar open state
//         setOpenSidebar: (state, action) => {
//             // Update the sidebar open state with the payload
//             state.isSidebarOpen = action.payload
//         },
//     },
// })

// // Export the action creators generated by createSlice
// export const { setCredentials, logout, setOpenSidebar } = authSlice.actions

// // Export the reducer to be used in the store
// export default authSlice.reducer
// src/redux/slices/authSlice.js
import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  user: null, // Start null, will be filled from backend
  isSidebarOpen: false,
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setCredentials: (state, action) => {
      state.user = action.payload;
    },
    logout: (state) => {
      state.user = null;
    },
    setOpenSidebar: (state, action) => {
      state.isSidebarOpen = action.payload;
    },
  },
});

export const { setCredentials, logout, setOpenSidebar } = authSlice.actions;
export default authSlice.reducer;
